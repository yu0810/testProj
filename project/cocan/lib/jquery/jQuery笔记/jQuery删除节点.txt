remove方法
语法：$("node").remove()
说明：当某个节点用remove()方法删除后，该节点包含的所有后代节点将同时被删除。
这个方法的返回值是一个指向已被删除的节点的引用，因此可以在以后在使用这些元素
下面的jQuery代码说明元素用remove()方法删除后，还是可以继续使用的。
var $li=$("ul li:eq(1)").remove();		//获取第2个li元素节点后，将它从网页中删除
$li.appendTo("ul");			//把刚才删除的节点又重新添加到了<ul>元素里
可以直接试用appendTo()方法的特性来简化以上代码，如下：
$("ul li :eq(1)").appendTo("ul");		//appendTo方法也可以用来移动元素
				//运动元素时首选从文档上删除此元素，
				//然后将该元素插入得到文档中的指定节点
另外remove()方法也可以通过传递参数来选择性地删除元素，如下：
$("ul li").remove("li[title!=菠萝]");	//将<li>元素中属性title不等于"菠萝"的<li>元素
				//删除
detach方法
detach()和remove()一样，也是从DOM中去掉所有匹配的元素。但需要注意的是，这个方法
不会把匹配的元素从jQuery对象中删除，因而可以在将来再试用这些匹配的元素。与remove()
方法不同的是，所有绑定的事件、附加的数据等都会保留下来。也就是说用remove()方法删除
元素的话，再追加时之前绑定的事件都将失效
empty()方法
严格来说，empty()方法并不会删除节点，而是清空节点，它能清空元素中的所有的后代节点
如：
$("ul li:eq(1)").empty();		//获取第2个<li>元素节点后，清空此元素里的
				//内容，注意是元素里
当代码运行后，第2个<li>元素的内容被清空了，只剩下<li>标签默认的符号”实心圆“	